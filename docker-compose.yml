services:
  db:
    image: postgres:15-alpine
    container_name: clinic-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: clinic_user
      POSTGRES_PASSWORD: DrImaniClinic1400!!
      POSTGRES_DB: clinic_db
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - clinic-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U clinic_user -d clinic_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"

  nextjs:
    image: dr-imani-nextjs:latest
    container_name: clinic-app
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://clinic_user:DrImaniClinic1400!!@db:5432/clinic_db
      - HOSTNAME=0.0.0.0
      - PORT=3000
      - MAP_API_KEY=${MAP_API_KEY}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - NEXT_PUBLIC_API_BASE_URL=http://host.docker.internal:3000
      - NODE_ENV=production
    ports:
      - "3000:3000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - clinic-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1.5G
          cpus: "1"

volumes:
  db_data:

networks:
  clinic-net:
